#! /bin/sh
#IAR_BUILD="/C/Program Files (x86)/IAR Systems/Embedded Workbench 7.5/common/bin/IarBuild.exe"
#IELFTOOL="/C/Program Files (x86)/IAR Systems/Embedded Workbench 7.5/arm/bin/ielftool.exe"
#JFLASH_ARM="/c/Program Files (x86)/SEGGER/JLink_V616d/JFlash.exe"
##JFLASH_ARM="/c/Program Files (x86)/SEGGER/JLink_V616d/JFlashLite.exe"

IAR_BUILD="/d/Program Files (x86)/IAR Systems/Embedded Workbench 7.5/common/bin/IarBuild.exe"
IELFTOOL="/d/Program Files (x86)/IAR Systems/Embedded Workbench 7.5/arm/bin/ielftool.exe" 
JFLASH_ARM="/c/Program Files (x86)/SEGGER/JLink_V616d/JFlash.exe"
#JFLASH_ARM="/c/Program Files (x86)/SEGGER/JLink_V616d/JFlashLite.exe"

IAR_PRJ="backplane.ewp"


NEED_CLEAN=0
NEED_BUILD=0
NEED_FLASH=0

VERSION_CODE=0

function usage {
	echo "USAGE: $0 clean|build|flash|buildflash IAR_BUILD_CONFIG versionCode"
	echo "       versionCode should be a decimal number up to 65535."
	exit 99
}

if [ $# -ne 3 ]; then
	usage
fi

VERSION_CODE=`printf "%d" $3 2> /dev/null` || usage
if [ $VERSION_CODE -gt "65535" ]; then
	usage
fi

case "$1" in
	clean)
		NEED_CLEAN=1
		;;
	build)
		NEED_BUILD=1
		;;
	flash)
		NEED_FLASH=1
		;;
	buildflash)
		NEED_BUILD=1
		NEED_FLASH=1
		;;
	*)
		usage
		;;
esac

BUILD_TARGET=$2
echo -e "//DON'T MODIFY. AUTO GENERATED BY BUILD.SH.\n#ifndef _AUTO_VER_H\n#define _AUTO_VER_H\n#define FIRMWARE_VER_CODE $VERSION_CODE\n#endif\n" > src/autover.h
MODEL_NAME=`grep SOLIWARE_MODEL_NAME src/config.h | cut -d\" -f 2`
echo target=$MODEL_NAME-v$VERSION_CODE

if [ $NEED_CLEAN -ne 0 ]; then
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build start...
	echo "$IAR_BUILD" "$IAR_PRJ" -clean $BUILD_TARGET
	"$IAR_BUILD" "$IAR_PRJ" -clean $BUILD_TARGET
	RC=$?
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build rc=$RC
	if [ $RC -ne 0 ]; then
		echo +++++++++++++++++++++++++++++++$BUILD_TARGET build failed
		exit $RC
	fi
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build finished
fi

if [ $NEED_BUILD -ne 0 ]; then
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build start...
	echo "$IAR_BUILD" "$IAR_PRJ" -make $BUILD_TARGET
	"$IAR_BUILD" "$IAR_PRJ" -make $BUILD_TARGET
	RC=$?
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build rc=$RC
	if [ $RC -ne 0 ]; then
		echo +++++++++++++++++++++++++++++++$BUILD_TARGET build failed
		exit $RC
	fi
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET build finished
	OUT_FILE=`ls Output/$BUILD_TARGET/Exe/*.out`
	BIN_FILE=$OUT_FILE".bin"
	TMP_FILE=$OUT_FILE".tmp"
	FIRMWARE_FILE="Output/signed-firmwares/$2-"$MODEL_NAME"-v"$VERSION_CODE".bin"
	rm -rf $BIN_FILE $TMP_FILE "Output/$BUILD_TARGET/Exe/firmware-*.bin"
	"$IELFTOOL" --verbose --bin $OUT_FILE $BIN_FILE
	mkdir -p "Output/signed-firmwares"
	cp -f $BIN_FILE $TMP_FILE
	printf "#%s#%04x#Soliware Sample Key String" $MODEL_NAME $VERSION_CODE >> $TMP_FILE
	cp -f $BIN_FILE $FIRMWARE_FILE
	printf "?%s?%04x?" $MODEL_NAME $VERSION_CODE >> $FIRMWARE_FILE
	md5sum $TMP_FILE | cut -z -d" " -f1 >> $FIRMWARE_FILE
	rm -rf $TMP_FILE
	echo "signed firmware generated: "
	ls -l $FIRMWARE_FILE
fi

if [ $NEED_FLASH -ne 0 ]; then
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET flash start...
	HEX_FILE=`ls Output/$BUILD_TARGET/Exe/*.hex`
	echo "$JFLASH_ARM" -open$HEX_FILE -auto -startapp -exit
	"$JFLASH_ARM" -open$HEX_FILE -auto -startapp -exit
	RC=$?
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET flash rc=$RC
	if [ $RC -ne 0 ]; then
		echo +++++++++++++++++++++++++++++++$BUILD_TARGET flash failed
		exit $RC
	fi
	echo +++++++++++++++++++++++++++++++$BUILD_TARGET flash finished
fi
